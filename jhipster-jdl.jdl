
entity Region {
	regionName String
}

entity Country {
	countryName String
}

// an ignored comment
/** not an ignored comment */
entity Location {
	streetAddress String
	postalCode String
	city String
	stateProvince String
}

entity Department {
	departmentName String required
}

entity Industry {
	industryName String required
}
/**
 * Task entity.
 * @author The JHipster team.
 */
entity Task {
	title String
	description String
    duration Long
    marks Long
}

entity Questionaire {
	questTitle String
    options String
    correctOption String
}

/**
 * The Employee entity.
 */
entity Applicant {
	/**
	* The firstname attribute.
	*/
	firstName String
	lastName String
	email String
	phoneNumber String
    education String
    address String
    skills String
    resume Blob
}

entity Company {
	companyName String
    description String
    contact String
    email String
    location String
    country String
    region String
    industry String 
    employeesCount Long
}

entity Job {
	jobTitle String
    department String
    industry String
    vacancies Long
    expiryDate LocalDate
    location String
    jobRequirement String
    jobResponsibility String
    skills String
    language Language
	minSalary Long
	maxSalary Long
    workingHours Double
    benefits String
}

enum Language {
    FRENCH, ENGLISH, SPANISH, DEUTSCH
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}
relationship OneToOne {
	Industry{department} to Company
}
relationship ManyToMany {
	Job{task(title)} to Task{job}
    Job{applicant(email)} to Applicant{job(jobTitle)} 
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
    Company{jobs} to Job
    Task{questionaire} to Questionaire
}


// defining multiple oneToOne relationships
relationship OneToOne {
	Job{department} to Department
    Company{department} to Department
    Applicant{location} to Location
    Applicant to User with builtInEntity
    Company to User with builtInEntity
    
}

// Set pagination options
paginate Company, Applicant with pagination
paginate Job with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct except Department, Location, Country, Region, Industry

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
